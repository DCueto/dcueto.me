---
type SizeButton = 'default' | 'large';
type AlignButton = 'center' | 'left' | 'right';
type TypeButton = 'button' | 'submit' | 'reset';

type Props = {
  size?: SizeButton;
  type?: TypeButton;
  align?: AlignButton;
  href?: string;
  iconFont?: string;
}

const { size = 'default', align = 'center', type = 'button', href, iconFont } = Astro.props;
---

{
  href ?
    <a href={href} class={`${size} custom-button ${align}`}>
      { iconFont && <i class={`custom-button__icon ${iconFont}`}></i> }
      <span class="custom-button__text">
        <slot></slot>
      </span>
    </a> :
    <button type={type} class={`${size} default-button ${align}`}>
      { iconFont && <i class={`custom-button__icon ${iconFont}`}></i> }
      <span class="custom-button__text">
        <slot></slot>
      </span>
    </button>
}


<style lang="scss">
    @mixin light-theme {
    --color-background__custom-button--default: white;
    --color-text__custom-button--default: black;
    --color-border__custom-button--default: black;
    --color-background__custom-button--hover: var(--color-yellow-js);
    --color-text__custom-button--hover: black;
    --color-border__custom-button--hover: black;
  }

  @mixin dark-theme {
    --color-background__custom-button--default: black;
    --color-text__custom-button--default: white;
    --color-border__custom-button--default: white;
    --color-background__custom-button--hover: var(--color-yellow-js);
    --color-text__custom-button--hover: black;
    --color-border__custom-button--hover: black;
  }

  :root{
    @include light-theme;
  }

  :root.dark{
    @include dark-theme;
  }

  @media ( prefers-color-scheme: dark ) {
    :root{
      @include light-theme;
    }

    :root.dark{
      @include dark-theme;
    }
  }

  .custom-button{
    background-color: var(--color-background__custom-button--default);
    padding: 0.5rem 1.25rem;
    font-size: 0.875rem;
    font-weight: bold;
    border: 0.125rem solid var(--color-border__custom-button--default);
    color: var(--color-text__custom-button--default);
    cursor: pointer;
    transition: all .1s ease-in;
    text-decoration: none;
    display: inline-flex;
    align-items: center;

    .custom-button__icon{
      margin-right: 0.5rem;
    }

    .custom-button__text{
      display: inline-block;
    }

    &:hover{
      background-color: var(--color-background__custom-button--hover);
      color: var(--color-text__custom-button--hover);
      border: 0.125rem solid var(--color-border__custom-button--hover);
    }

    &:active{
      transform: translateY(2px);
    }

    &:focus{
      outline: none;
    }

    &:focus-visible{
      box-shadow: 0 0 0 3px var(--color-yellow-js);
    }

    &:disabled{
      background-color: gray;
      color: white;
      border: 0.125rem solid black;
      cursor: not-allowed;
    }

    &:disabled:hover{
      background-color: gray;
      color: white;
      border: 0.125rem solid black;
    }

    &:disabled:active{
      transform: none;
    }

    &:disabled:focus-visible{
      box-shadow: none;
    }

    &:disabled:focus{
      outline: none;
    }

  }
</style>