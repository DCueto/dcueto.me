---
import type { Locale } from '@services/routing';
import { getTranslationValue } from '@utils/i18n';
import type { CollectionEntry } from 'astro:content'
import { WorkExperience as WorkExp } from '@components/portfolio/react/WorkExperience';
import { Tabs } from '@components/shared/react/Tabs';
import type { AstroComponentFactory } from 'astro/runtime/server/index.js';


type Props = {
  experience: CollectionEntry<'experience'>[]
}

const { experience } = Astro.props;

// const dateOptions: Intl.DateTimeFormatOptions = { day: 'numeric', month: 'short', year: 'numeric' };
const locale = Astro.params.locale as Locale;
// const { pathname } = Astro.url;

const t = (key: string): string => locale ? getTranslationValue(locale, key) : getTranslationValue('en', key);

const tabs = experience.map(({ data }) => data.company_name);
let activeTab = tabs[0];

const handleTabChange = (valueTab: string) => {
  activeTab = valueTab;
}

type ExperienceContent = {
  company_name: string;
  Content: AstroComponentFactory;
};

const contents: ExperienceContent[] = await Promise.all(
  experience.map( async ({ data, render }) => {
    const { Content } = await render();
    return {
      company_name: data.company_name,
      Content: Content
    };
  })
);

---

<section class="work-experience wrap">
  <h2>{ t('experience.title') }</h2>

  <WorkExp tabs={tabs} experience={experience} client:idle>
  </WorkExp>

</section>