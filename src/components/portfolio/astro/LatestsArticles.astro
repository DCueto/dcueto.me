---
import ArticleCard from '@components/shared/astro/ArticleCard.astro';
import Button from '@components/shared/astro/Button.astro';
import type { InferEntrySchema } from 'astro:content';
import { generateLink } from '@services/routing';
import type { Locale } from '@services/routing';

type Article = {
  id: string;
  slug: string;
  body: string;
  collection: "blog";
  data: InferEntrySchema<"blog">
};

type Props = {
  articles: Article[]
};

const { articles } = Astro.props;
const dateOptions: Intl.DateTimeFormatOptions = { day: 'numeric', month: 'short', year: 'numeric' };
const locale = Astro.params.locale as Locale;
const { pathname } = Astro.url;

// const generateLink2 = (slug: string): string => {
// 	if (pathname.startsWith(`/${locale}`)) {
// 		return `${pathname}blog/${slug}`;
// 	}

// 	return `/${locale}/blog/${slug}`;
// }
---

<section class="latests-articles wrap">
  <h2>Art√≠culos</h2>
  <div class="articles-container">
    {
      articles.map((article) => (
        <ArticleCard
          date={
            article.data.language === 'en'
            ? article.data.publication_date.toLocaleDateString('en-US', dateOptions) :
            article.data.language === 'es'
            ? article.data.publication_date.toLocaleDateString('es-ES', dateOptions) :
            article.data.publication_date.toLocaleDateString('en-GB', dateOptions)
          }
          title={article.data.title}
          description={article.data.description}
          href={generateLink('blog', article.slug, pathname, locale)}
        />
      ))
    }
  </div>

  <Button size="default" text="VIEW BLOG ->" align='center'/>
</section>

<style lang="scss">
  @mixin light-theme {
    --color-background__latests-articles: white;
  }

  @mixin dark-theme {
    --color-background__latests-articles: var(--color-black-obsidian);
  }

  :root{
    @include light-theme;
  }

  :root.dark{
    @include dark-theme;
  }

  @media ( prefers-color-scheme: dark ) {
    :root{
      @include light-theme;
    }

    :root.dark{
      @include dark-theme;
    }
  }

  .latests-articles{
    padding-top: 1.875rem ;
    padding-bottom: 2rem;
    background-color: var(--color-background__latests-articles);
  }

  .latests-articles .articles-container{
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    gap: 3%;
  }

  @media screen and ( width <= 850px ) {
    .articles-container{
      flex-direction: column;
    }
  }
</style>