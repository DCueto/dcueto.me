---
import Tag from '@components/shared/astro/Tag.astro';
import LinkButton from '@components/shared/astro/LinkButton.astro';
import CarouselSimple from '@components/shared/react/CarouselSimple';
import { Image } from 'astro:assets';

type ImageContent = {
  image: {
    src: string;
    width: number;
    height: number;
    format: "png" | "jpg" | "jpeg" | "tiff" | "webp" | "gif" | "svg" | "avif";
  };
  alt?: string;
}

type AstroImage = {
  src: string;
  width: number;
  height: number;
  format: "png" | "jpg" | "jpeg" | "tiff" | "webp" | "gif" | "svg" | "avif";
}

type Props = {
  title: string;
  description?: string;
  tags?: string[];
  image: AstroImage;
  href: string;
  images?: ImageContent[];
  repoLink?: string;
  demoLink?: string;
  link?: string;
}

type CarouselImage = {
  src: string;
  alt: string;
}

const { title, description, tags, image, href, images, repoLink, demoLink, link } = Astro.props;

const carouselImages = images?.map((image) : CarouselImage => ({
  src: image.image.src,
  alt: image.alt || title
}));
---

<article class="project-card">
  <!-- <h3 class="project-title">{ title }</h3> -->
  {
    images ?
      <CarouselSimple client:visible images={ carouselImages as CarouselImage[] }></CarouselSimple> :
      <Image src={ image } alt={ title } class="project-img" />
  }
  <div class="project-details">
    <h4>{ title }</h4>
    <p>{ description }</p>
    <div class="project-tags">
      {
        tags?.map((tag) => (
          <Tag content={ tag } />
        ))
      }
    </div>
    <div class="project-links">
      {
        repoLink && <LinkButton iconFont="fab fa-github" link={ repoLink }>Code</LinkButton>
      }
      {
        demoLink && <LinkButton iconFont="fas fa-external-link-alt" link={ demoLink }>Demo</LinkButton>
      }
      {
        link && <LinkButton iconFont="fas fa-external-link-alt" link={ link }>Link</LinkButton>
      }
    </div>
  </div>
  <div class="project-card-transition"></div>
</article>


<style lang="scss">
  @mixin light-theme {
    --color-text__project-details: white;
    --color-background__project-details: var(--color-black-oil);
    --color-background__project-card--transition: var(--color-yellow-main);
    --color-text__project-card__h3: var(--color-yellow-js);
    --color-background__project-card__h3: rgba(12, 12, 12, .7);
  }

  @mixin dark-theme {
    --color-text__project-details: white;
    --color-background__project-details: var(--color-black-oil);
    --color-background__project-card--transition: var(--color-yellow-main);
    --color-text__project-card__h3: var(--color-yellow-js);
    --color-background__project-card__h3: rgba(12, 12, 12, .7);
  }

  :root{
    @include light-theme;
  }

  :root.dark{
    @include dark-theme;
  }

  @media ( prefers-color-scheme: dark ) {
    :root{
      @include light-theme;
    }

    :root.dark{
      @include dark-theme;
    }
  }

  .project-card{
    width: auto;
    margin: 0.625rem 0;
    min-width: 100%;
    cursor: pointer;
    background-color: var(--color-yellow-main);
    aspect-ratio: 16 / 9;
    transition: all .6s ease;
    border: 3px solid black;
    box-shadow: 0 0 10px 0 rgba(0, 0, 0, .2);
    position: relative;
    overflow: hidden;

    .project-links{
      display: flex;
      gap: 1rem;
      margin: 1rem 0;
    }
  }


  .project-card .project-details{
    color: var(--color-text__project-details);
    position: absolute;
    z-index: 20;
    transition: all .6s ease;
    bottom: 0;
    background-color: var(--color-background__project-details);
    padding: 1.25rem;
    width: 100%;
    height: 50%;
    transform: translateY(100%);
    overflow-y: scroll;

    h4{
      font-size: 150%;
    }

    p {
      font-size: 100%;
    }

    .project-tags{
      .tag{
        font-size: 90%;
      }
    }
  }

  .project-card:hover{
    aspect-ratio: 16 / 24;
    .project-details{
      transform: translate(0%);
      h4{
        color: var(--color-yellow-js);
      }
    }

    img{
      height: 50%;
    }
  }

  .project-card .project-card-transition{
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: 11;
    background-color: var(--color-background__project-card--transition);
    transform: translateY(100%);
    transition: all .4s ease-out;
  }

  .project-card:hover .project-card-transition{
    transform: translate(0%);
  }


  .project-card h3{
    position: absolute;
    z-index: 2;
    font-size: 2.5rem;
    margin: 0;
    padding: 2rem;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 40%;
    bottom: 0;
    color: var(--color-text__project-card__h3);
    background-color: var(--color-background__project-card__h3);
    backdrop-filter: blur(2px);
  }

  .project-card img{
    width: 100%;
    height: 100%;
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
    transition: all .4s ease-in;
  }

  .project-card .project-tags{
    display: flex;
    flex-wrap: wrap;
    gap: 0.8rem;
  }

  @media screen and ( width > 600px ){
    .project-card:hover{
      aspect-ratio: 16 / 13.5;
    }
  }

  @media screen and ( width > 1120px ){

    .project-card:nth-child(even){
      transform-origin: right top;
    }
    .project-card:nth-child(odd){
      transform-origin: left top;
    }
    .project-card{
      min-width: 48%;
      position: relative;
      overflow: hidden;
      .project-details{
        transform: translateY(100%);
        height: 100%;
        width: 40%;
        h4{
          font-size: 1.3rem;
        }
        p{
          font-size: 80%;
        }

        .project-tags{
          .tag{
            font-size: 1rem;
          }
        }
      }

      .project-card-transition{
        width: 40%;
        height: 100%;
      }
    }
    

    .project-card:hover{
      height: 50%;
      transform: scale(2.06);
      aspect-ratio: 4 / 1.6;
      zoom: 50%;
      z-index: 1000;

      img{
        height: 100%;
        width: 60%;
        position: absolute;
        top: 0;
        right: 0;
        transition: all .4s ease-in;
      }

      .carousel-simple{
        max-height: none;
        background-color: black !important;
        height: 100%;
        width: 60%;
        position: absolute;
        top: 0;
        right: 0;
        transition: all .4s ease-in;
      }
    }
  }

</style>


<style is:global>


  .project-card:hover{
    .carousel-simple{
      height: 50%;
      width: 100%;
      position: absolute;
      top: 0;
      right: 0;
      transition: all .4s ease-in;
    }
  }

  @media screen and ( width > 1120px ){
    .project-card:hover{
      .carousel-simple{
        height: 100%;
        width: 60%;
        position: absolute;
        transition: all .4s ease-in;
      }
    }
  }
</style>